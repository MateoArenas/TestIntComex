// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestIntComex.Infrastructure.Data;

#nullable disable

namespace TestIntComex.Infrastructure.Migrations
{
    [DbContext(typeof(IntComexContext))]
    [Migration("20221003065318_specificSize")]
    partial class specificSize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TestIntComex.Core.Entities.TbContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdContactType")
                        .HasColumnType("int");

                    b.Property<bool>("boolAutorizeOrders")
                        .HasColumnType("bit");

                    b.Property<bool>("boolAutorizeWebStore")
                        .HasColumnType("bit");

                    b.Property<bool>("boolSendInformation")
                        .HasColumnType("bit");

                    b.Property<string>("strCellphone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strClientCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("strPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("strPosition")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("strUserName")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdContactType");

                    b.ToTable("TbContact");
                });

            modelBuilder.Entity("TestIntComex.Core.Entities.TbContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TbContactType");
                });

            modelBuilder.Entity("TestIntComex.Core.Entities.TbContact", b =>
                {
                    b.HasOne("TestIntComex.Core.Entities.TbContactType", "TbContactType")
                        .WithMany("TbContact")
                        .HasForeignKey("IdContactType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TbContactType");
                });

            modelBuilder.Entity("TestIntComex.Core.Entities.TbContactType", b =>
                {
                    b.Navigation("TbContact");
                });
#pragma warning restore 612, 618
        }
    }
}
